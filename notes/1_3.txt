curl http://127.0.0.1:8000/about 

curl -X GET http://127.0.0.1:8000/about 
curl -X POST http://127.0.0.1:8000/about 


@app.route("/about")

<!doctype html>
<html lang=en>
<title>405 Method Not Allowed</title>
<h1>Method Not Allowed</h1>
<p>The method is not allowed for the requested URL.</p>

@app.route("/about", methods=["GET", "POST", "DELETE", "PUT"])


curl -I http://127.0.0.1:8000/hello

HTTP/1.1 200 OK
Server: Werkzeug/3.0.4 Python/3.12.5
Date: Thu, 17 Oct 2024 01:42:51 GMT
Content-Type: text/html; charset=utf-8
Content-Length: 33
Connection: close


@app.route("/hello")
def hello():
    return "<h2>Hello, This is Flask App</h2>", 201  # custom request

HTTP/1.1 201 CREATED
Server: Werkzeug/3.0.4 Python/3.12.5
Date: Thu, 17 Oct 2024 01:46:18 GMT
Content-Type: text/html; charset=utf-8
Content-Length: 33
Connection: close

201 => CREATED
202 => ACCEPTED
404 => NOT FOUND


from flask import Flask, render_template, request, make_response

@app.route("/make_res")
def make_res():
    response = make_response()
    response.status_code = 202
    response.headers["content-type"] = "application/octet-stream"
    return response


@app.route("/make_res")
def make_res():
    response = make_response("Make Response\n")
    response.status_code = 202
    response.headers["content-type"] = "application/octet-stream"
    return response

curl http://127.0.0.1:8000/make_res
Make Response


curl http://127.0.0.1:8000/make_res => send a GET request 
curl -I http://127.0.0.1:8000/make_res => send a HEAD request 


<ul>
   {% for item in my_list %} {% if item.startswith("D") or
    item.startswith("J") %}
       <li style="color: blue; font-size: 20px">{{ item }}</li>
   {% else %}
       <li style="font-size: 20px">{{item}}</li>
   {% endif %} {% endfor %}
</ul> 


<ul>
    {% for item in my_list %}
    <li {% if item[0] == "J" or item[0] == "D" %} style="color: blue; font-size:20px"  {% endif %} style="font-size:20px" >{{ item }}</li>
    {% endfor %}
</ul>

Jinja Filters 

<h3> {{ some_text | upper }} </h3> // cannot use .upper() directly


---------------------------------------------------------------------------------------------


# custom jinja filters
@app.template_filter("reverse_string")
def reverse_string(value):
    return value[::-1]


@app.template_filter("repeat")
def repeat(str, times=2):
    # return str * times
    return " _ ".join([str] * times)


@app.template_filter("alternate_case")
def alternate_case(str):
    return "".join([c.upper() if i % 2 == 0 else c.lower() for i, c in enumerate(str)])


@app.template_filter("swap_case")
def swap_case(str):
    return "".join([c.upper() if c.islower() else c.lower() for c in str])


{# Jinja Filters #}
<h3>{{ some_text | upper }}</h3>  
<h3>{{ some_text | lower }}</h3>
<h3>{{ some_text | capitalize }}</h3>
<h3>{{ some_text | title }}</h3>
<h3>{{ some_text | replace("text", "paragraph") }}</h3>

{# custom filter #}
<h3>{{ some_text | reverse_string }}</h3>
<h3>{{ some_text | repeat }}</h3>
<h3>{{ some_text | repeat(4) }}</h3>
<h3>{{ alter_text | alternate_case }}</h3>
<h3>{{ alter_text | swap_case }}</h3>


{# redirect and dynamic url path #}
<a href="{{ url_for("index") }}">To Home Page</a>
<a href="{{ url_for("other") }}">To Other Page</a>


*** url_for ***

url_for => finds the "function name" view function in Flask app 

url_for("other) => finds other function in Flask App => go to route "/other"


<a href="{{ url_for("other") }}">To Other Page</a>

@app.route("/other")
def other(): 
    my_fruits = ["apple", "orange", "peach", "grape", "banana"]
    some_text = "some text"
    alter_text = "This Is HOLLYWOOD."
    return render_template(
        "other.html", my_fruits=my_fruits, some_text=some_text, alter_text=alter_text
    )


============================================================================================


url_for("other) => finds "other" function in Flask App => go to route "/hellokitty"


<a href="{{ url_for("other") }}">To Other Page</a>

@app.route("/hello kitty")
def other(): 
    my_fruits = ["apple", "orange", "peach", "grape", "banana"]
    some_text = "some text"
    alter_text = "This Is HOLLYWOOD."
    return render_template(
        "other.html", my_fruits=my_fruits, some_text=some_text, alter_text=alter_text
    )


============================================================================================


from flask import Flask, request, render_template, redirect, url_for

<a href="{{url_for("redirect_endpoint")}}">To Redirect Endpoint - Other</a>
